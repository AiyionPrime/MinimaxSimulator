operation.transfer.description = Transfers {0} through the ALU unchanged.
operation.transfer.rtn = {0}

operation.add.description = Adds {0} and {1}.
operation.add.rtn = {0} + {1}

operation.sub.description = Substracts {1} from {0}.
operation.sub.rtn = {0} - {1}

operation.mul.description = Multiplies {0} with {1}.
operation.mul.rtn = {0} * {1}

operation.div.description = Integer division of {0} by {1}. Division by 0 returns 0.
operation.div.rtn = {0} / {1}

operation.mod.description = Remainder of division of {0} by {1}. For {1} = 0, returns 0.
operation.mod.rtn = {0} mod {1}

operation.inc.description = Increments {0} by 1.
operation.inc.rtn = {0} + 1

operation.dec.description = Decrements {0} by 1.
operation.dec.rtn = {0} - 1

operation.and.description = Bitwise AND of {0} and {1}.
operation.and.rtn = {0} & {1}

operation.or.description = Bitwise OR of {0} and {1}.
operation.or.rtn = {0} | {1}

operation.xor.description = Bitwise XOR of {0} and {1}.
operation.xor.rtn = {0} ^ {1}

operation.inv.description = Inverts {0} bitwise.
operation.inv.rtn = \u00AC {0}

operation.sl1.description = Shift left: Moves all bits of {0} by one position to the left. The MSB is discarded, the LSB is set to 0.
operation.sl1.rtn = {0}[30..0]@0

operation.sl2.description = Shift left: Moves all bits of {0} by {1} positions to the left. The MSBs are discarded, the LSBs are set to 0.
operation.sl2.rtn = {0}[31-{1}..0]@0^{1}

operation.sr1.description = Shift right: Moves all bits of {0} by one position to the right. The LSB is discarded, the new MSB conserves the sign.
operation.sr1.rtn = {0}[31]@{0}[31..1]

operation.sr2.description = Shift right: Moves all bits of {0} by {1} positions to the right. The LSBs are discarded, the new MSBs conserve the sign.
operation.sr2.rtn = {0}[31]^{1}@{0}[31..{1}]

operation.sru1.description = Shift right unsigned mode: Moves all bits of {0} by one position to the right. The LSB is discarded, the MSB is set to 0.
operation.sru1.rtn = 0@{0}[31..1]

operation.sru2.description = Shift right unsigned mode: Moves all bits of {0} by {1} positions to the right. The LSBs are discarded, the MSBs are set to 0.
operation.sru2.rtn = 0^{1}@{0}[31..{1}]

operation.rotl1.description = Rotate left: Rotates all bits of {0} by one position to the left. The LSB will contain the previous value of the MSB.
operation.rotl1.rtn = {0}[30..0]@{0}[31]

operation.rotl2.description = Rotate left: Rotates all bits of {0} by {1} positions to the left. The LSBs will contain the previous value of the MSBs.
operation.rotl2.rtn = {0}[31-{1}..0]@{0}[31..32-{1}]

operation.rotr1.description = Rotate right: Rotates all bits of {0} by one position to the right. The MSB will contain the previous value of the LSB.
operation.rotr1.rtn = {0}[0]@{0}[31..1]

operation.rotr2.description = Rotate right: Rotates all bits of {0} by {1} positions to the right. The MSBs will contain the previous value of the LSBs.
operation.rotr2.rtn = {0}[{1}-1..0]@{0}[31..{1}]